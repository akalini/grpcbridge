import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.18'
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'com.google.protobuf'
    apply plugin: 'idea'

    version = '1.3.8'
    group = 'grpcbridge'

    repositories {
        mavenCentral()
    }

    ext {
        ver = [
                protobuf   : '3.19.1',
                grpc       : '1.36.2',
                opencensus : '0.26.0',
                slf4j      : '1.7.30',
        ]
    }

    dependencies {
        implementation "org.slf4j:slf4j-api:${ver.slf4j}"

        implementation "com.google.protobuf:protobuf-java:${ver.protobuf}"
        implementation "com.google.protobuf:protobuf-java-util:${ver.protobuf}"
        implementation "io.grpc:grpc-protobuf:${ver.grpc}"

        testImplementation 'junit:junit:4.12'
        testImplementation 'org.assertj:assertj-core:3.14.0'
    }

    protobuf {
        protoc {
            artifact = "com.google.protobuf:protoc:${ver.protobuf}"
        }

        plugins {
            // TODO: remove this suffix for M1 compatibility after upgrading gRPC >= 1.42.x
            def os = DefaultNativePlatform.getCurrentOperatingSystem()
            def versionSuffix = os.isMacOsX() ? ":osx-x86_64" : ""
            grpc {
                artifact = "io.grpc:protoc-gen-grpc-java:${ver.grpc}:$versionSuffix"
            }
        }

        generateProtoTasks {
            all()*.plugins {
                grpc {}
            }
        }
    }

    idea {
        module {
            sourceDirs += file("${protobuf.generatedFilesBaseDir}/main/java")
            sourceDirs += file("${protobuf.generatedFilesBaseDir}/main/grpc")
            sourceDirs += file("${protobuf.generatedFilesBaseDir}/test/java")
            sourceDirs += file("${protobuf.generatedFilesBaseDir}/test/grpc")
        }
    }
}
