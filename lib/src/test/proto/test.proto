syntax = "proto3";
package grpcbridge.test.proto;

import "google/api/annotations.proto";
import "grpcbridge/grpcbridge-options.proto";

enum Enum { INVALID = 0; VALID = 1; }

message Nested {
  string nested_field = 1;
}

message DefaultMessage {
  string default_string = 1 [(grpcbridge.serialize_default_value) = true];
  int32 default_int = 2 [(grpcbridge.serialize_default_value) = true];
  bool default_bool = 3 [(grpcbridge.serialize_default_value) = true];
  Enum default_enum= 4 [(grpcbridge.serialize_default_value) = true];
  Nested default_nested = 5 [(grpcbridge.serialize_default_value) = true];
  repeated string default_repeated = 6 [(grpcbridge.serialize_default_value) = true];
}

message GetRequest {
  string string_field = 1;
  int32 int_field = 2;
  int64 long_field = 3;
  float float_field = 4;
  double double_field = 5;
  bool bool_field = 6;
  bytes bytes_field = 7;
  Enum enum_field = 8;
  Nested nested = 9;
  repeated string repeated_field = 10;
  DefaultMessage default = 11;
}

message GetResponse {
  string string_field = 1;
  int32 int_field = 2;
  int64 long_field = 3;
  float float_field = 4;
  double double_field = 5;
  bool bool_field = 6;
  bytes bytes_field = 7;
  Enum enum_field = 8;
  Nested nested = 9;
  repeated string repeated_field = 10;
  DefaultMessage default = 11;
  DefaultMessage unset_default = 12;
}

message PostRequest {
  string string_field = 1;
  int32 int_field = 2;
}

message PostResponse {
  string string_field = 1;
  int32 int_field = 2;
}

message PutRequest {
  string string_field = 1;
}

message PutResponse {
  string string_field = 1;
}

message DeleteRequest {
  string string_field = 1;
}

message DeleteResponse {
  string string_field = 1;
}

message PatchRequest {
  string string_field = 1;
}

message PatchResponse {
  string string_field = 1;
}

message GrpcErrorRequest {
  bool add_metadata = 1;
}

message GrpcErrorResponse {
}


service TestService {
  rpc Get (GetRequest) returns (GetResponse) {
    option (google.api.http) = {
        get: "/get/{string_field}"
    };
  }

  rpc GetWithParams (GetRequest) returns (GetResponse) {
    option (google.api.http) = {
        get: "/get"
    };
  }

  rpc GetWithSuffix (GetRequest) returns (GetResponse) {
    option (google.api.http) = {
        get: "/get/{string_field}/suffix"
    };
  }

  rpc GetStatic (GetRequest) returns (GetResponse) {
    option (google.api.http) = {
        get: "/get-static"
    };
  }

  rpc GetMultipleParams (GetRequest) returns (GetResponse) {
    option (google.api.http) = {
        get: "/get-multi/{string_field}/{int_field}/{long_field}/{float_field}/{double_field}/{bool_field}/{bytes_field}/{enum_field}/{nested.nested_field}"
    };
  }

  rpc GetNestedParams (GetRequest) returns (GetResponse) {
    option (google.api.http) = {
        get: "/get-nested/{nested.nested_field}"
    };
  }

  rpc GetRepeatedParams (GetRequest) returns (GetResponse) {
    option (google.api.http) = {
        get: "/get-repeated"
    };
  }

  rpc GetUnknownPath (GetRequest) returns (GetResponse) {
    option (google.api.http) = {
        get: "/get-unknown-path/{unknown.name}"
    };
  }

  rpc GetUnknownParam (GetRequest) returns (GetResponse) {
    option (google.api.http) = {
        get: "/get-unknown-param/{nested.unknown}"
    };
  }

  rpc Post (PostRequest) returns (PostResponse) {
    option (google.api.http) = {
        post: "/post/{string_field}"
        body: "*"
    };
  }

  rpc PostNoBody (PostRequest) returns (PostResponse) {
    option (google.api.http) = {
        post: "/post-no-body/{string_field}"
    };
  }

  rpc PostCustomBody (PostRequest) returns (PostResponse) {
    option (google.api.http) = {
        post: "/post-custom/{string_field}"
        body: "{int_field}"
    };
  }

  rpc Put (PutRequest) returns (PutResponse) {
    option (google.api.http) = {
        put: "/put/{string_field}"
        body: "*"
    };
  }

  rpc Delete (DeleteRequest) returns (DeleteResponse) {
    option (google.api.http) = {
        delete: "/delete/{string_field}"
    };
  }

  rpc Patch (PatchRequest) returns (PatchResponse) {
    option (google.api.http) = {
        patch: "/patch/{string_field}"
    };
  }

  rpc GrpcError (GrpcErrorRequest) returns (GrpcErrorResponse) {
    option (google.api.http) = {
        get: "/grpc-error"
    };
  }
  
  rpc GetStream (GetRequest) returns (stream GetResponse) {
    option (google.api.http) = {
        get: "/get-stream/{string_field}"
    };
  }
}
